diff --git a/install/controllers/http/process.php b/install/controllers/http/process.php
index db13ed3..888b14f 100644
--- a/install/controllers/http/process.php
+++ b/install/controllers/http/process.php
@@ -95,13 +95,9 @@ class InstallControllerHttpProcess extends InstallControllerHttp implements Http
             Language::downloadAndInstallLanguagePack($this->session->lang);
         } elseif (Tools::getValue('configureShop') && !empty($this->session->process_validated['populateDatabase'])) {
             $this->processConfigureShop();
-        } elseif (Tools::getValue('installFixtures') && !empty($this->session->process_validated['configureShop'])) {
-            $this->processInstallFixtures();
-        } elseif (Tools::getValue('installModules') && (!empty($this->session->process_validated['installFixtures']) || $this->session->install_type != 'full')) {
+        } elseif (Tools::getValue('installModules') && !empty($this->session->process_validated['configureShop'])) {
             $this->processInstallModules();
-        } elseif (Tools::getValue('installModulesAddons') && !empty($this->session->process_validated['installModules'])) {
-            $this->processInstallAddonsModules();
-        } elseif (Tools::getValue('installTheme') && !empty($this->session->process_validated['installModulesAddons'])) {
+        } elseif (Tools::getValue('installTheme') && !empty($this->session->process_validated['installModules'])) {
             $this->processInstallTheme();
         } else {
             // With no parameters, we consider that we are doing a new install, so session where the last process step
@@ -334,22 +330,6 @@ class InstallControllerHttpProcess extends InstallControllerHttp implements Http
         $this->process_steps[] = $populate_step;
         $this->process_steps[] = array('key' => 'configureShop', 'lang' => $this->translator->trans('Configure shop information', array(), 'Install'));
 
-        if ($this->session->install_type == 'full') {
-            // If low memory, create subtasks for installFixtures step (entity per entity)
-            $fixtures_step = array('key' => 'installFixtures', 'lang' => $this->translator->trans('Install demonstration data', array(), 'Install'));
-            if ($low_memory) {
-                $fixtures_step['subtasks'] = array();
-                $xml_loader = new XmlLoader();
-                $xml_loader->setTranslator($this->translator);
-                $xml_loader->setFixturesPath();
-
-                foreach ($xml_loader->getSortedEntities() as $entity) {
-                    $fixtures_step['subtasks'][] = array('entity' => $entity);
-                }
-            }
-            $this->process_steps[] = $fixtures_step;
-        }
-
         $install_modules = array('key' => 'installModules', 'lang' => $this->translator->trans('Install modules', array(), 'Install'));
         if ($low_memory) {
             foreach ($this->model_install->getModulesList() as $module) {
@@ -358,23 +338,6 @@ class InstallControllerHttpProcess extends InstallControllerHttp implements Http
         }
         $this->process_steps[] = $install_modules;
 
-        $install_modules = array('key' => 'installModulesAddons', 'lang' => $this->translator->trans('Install Addons modules', array(), 'Install'));
-
-        $params = array(
-            'iso_lang' => $this->language->getLanguageIso(),
-            'iso_country' => $this->session->shop_country,
-            'email' => $this->session->admin_email,
-            'shop_url' => Tools::getHttpHost(),
-            'version' => _PS_INSTALL_VERSION_
-        );
-
-        if ($low_memory) {
-            foreach ($this->model_install->getAddonsModulesList($params) as $module) {
-                $install_modules['subtasks'][] = array('module' => (string)$module['name'], 'id_module' => (string)$module['id_module']);
-            }
-        }
-        $this->process_steps[] = $install_modules;
-
         $this->process_steps[] = array('key' => 'installTheme', 'lang' => $this->translator->trans('Install theme', array(), 'Install'));
 
         $this->displayTemplate('process');
